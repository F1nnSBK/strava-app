@page "/my-activities";
@using strava_analysis.Services;
@using System.Collections.Generic;

@inject UserSession UserSession;
@inject StravaApiService StravaApi;
<h3>ActivityList</h3>

@if (_activities is not null && _activities.Any())
{
    <div class="activity-list">
        @foreach (var activity in _activities)
        {
            <div class="activity-card" style="border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; border-radius: 5px;">
                <h4>@activity.Title</h4>
                <p>
                    <strong>üóìÔ∏è Datum:</strong> @activity.StartDateLocal.ToString("dd.MM.yyyy")
                    <br />
                    <strong>üö¥ Typ:</strong> @activity.Type
                    <br />
                    <strong>üìè Distanz:</strong> @((activity.DistanceInMeters / 1000).ToString("F2")) km
                    <br />
                    <strong>‚è±Ô∏è Zeit:</strong> @TimeSpan.FromSeconds(activity.MovingTimeInSeconds).ToString(@"hh\:mm\:ss")
                    <br />
                    <strong>‚õ∞Ô∏è H√∂henmeter:</strong> @activity.ElevationGainInMeters.ToString("F0") m
                    <br />
                    <strong>üëç Kudos:</strong> @activity.KudosCount
                </p>
            </div>
        }
    </div>
}

@code {
    private List<StravaActivity>? _activities;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"ActivityList OnInitializedAsync: IsLoggedIn = {UserSession.IsLoggedIn}");

        if (UserSession.IsLoggedIn)
        {
            _activities = await StravaApi.GetStravaActivitiesAsync();
            StateHasChanged();
        }
    }
}