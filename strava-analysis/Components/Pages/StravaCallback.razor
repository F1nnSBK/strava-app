@page "/strava-callback";
@inject IConfiguration Configuration;
@inject NavigationManager NavManager;
@inject HttpClient HttpClient;

<h3>Login wird verarbeitet...</h3>

@code
{
    [SupplyParameterFromQuery]
    public string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(Code))
        {
            NavManager.NavigateTo("/login");
            return;
        }
        
        var clientId = Configuration["Strava:ClientId"];
        var clientSecret = Configuration["Strava:ClientSecret"];

        var requestData = new Dictionary<string, string>
        {
            { "client_id", clientId },
            { "client_secret", clientSecret },
            { "code", Code },
            { "grant_type", "authorization_code" },
        };

        var response = await 
            HttpClient.PostAsync("https://www.strava.com/oauth/token", new FormUrlEncodedContent(requestData));

        if (response.IsSuccessStatusCode)
        {
            var tokenResponse = await response.Content.ReadFromJsonAsync<StravaTokenResponse>();
            
            // TODO: Save Token for session

            NavManager.NavigateTo("/my-activities");
        }
        else
        {
            NavManager.NavigateTo("/login?error=auth_failed");
        }
    }

    private class StravaTokenResponse
    {
        public string? token_type { get; set; }
        public string? expires_at { get; set; }
        public string? expires_in { get; set; }
        public string? refresh_token { get; set; }
        public string? access_token { get; set; }
    }
}